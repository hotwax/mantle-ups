<?xml version="1.0" encoding="UTF-8"?>
<services xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          xsi:noNamespaceSchemaLocation="http://moqui.org/xsd/service-definition-2.1.xsd">
    <service verb="send" noun="UpsRequest">
        <in-parameters>
            <parameter name="shippingGatewayConfigId" required="true"/>
            <parameter name="path" required="true"/>
            <parameter name="requestMap" type="Map" required="false"/>
        </in-parameters>
        <out-parameters>
            <parameter name="responseMap" type="Map" required="true"/>
        </out-parameters>
        <actions>
            <entity-find-one entity-name="ups.ShippingGatewayUps" value-field="upsShippingConfig" cache="true"/>
            <if condition="upsShippingConfig == null || !(upsShippingConfig.userId || upsShippingConfig.password)">
                <log message="No shipping configuration found for upsShippingConfigId ${upsShippingConfigId} "/>
                <return type="warning" error="true"
                        message="No shipping configuration found for upsShippingConfigId ${upsShippingConfigId}"/>
            </if>
            <set field="responseMap" from="[:]"/>
            <set field="requestMap" from="[:]"/>
            <set field="requestMap" from="[AccessRequest: [AccessLicenseNumber:'3CECCCED52F173F2',UserId:'hotwaxmedia',Password:'H0tw@xmedia'], AddressValidationRequest: [Request:[TransactionReference:[CustomerContext:'Your Customer Context'],RequestAction:'AV'],Address:[City:'ALPHARETTA',StateProvinceCode:'GA',PostalCode:'30005']]]"/>
            <script><![CDATA[
                  import org.moqui.util.RestClient;
                  import groovy.json.JsonSlurper;

                  def connectUrl = upsShippingConfig.connectUrl;
                  if (!connectUrl.endsWith("/")) {
                    connectUrl+="/";
                    }
                 connectUrl = connectUrl + path;
                 RestClient restClient = ec.service.rest()
                 restClient.method("POST")
                 restClient.uri(connectUrl)
                 restClient.contentType("application/json")
                 restClient.jsonObject(requestMap)
                 RestClient.RestResponse restResponse = restClient.call()
                 if (restResponse.statusCode < 200 || restResponse.statusCode > 300) {
                    errMsgMap = (Map) new JsonSlurper().parseText(restResponse.text())
                    ec.logger.warn(restResponse.text())
                    if (errMsgMap?.error) {
                        responseMap.put("error", errMsgMap?.error?.message)
                    } else if (errMsgMap?.errors) {
                        responseMap.put("error", errMsgMap?.title)
                    }
                    return responseMap
                }
                responseMap = restResponse.jsonObject()
            ]]></script>
        </actions>
    </service>

</services>